{{- $fullName := include "taiga.fullname" . -}}
{{- $isTag := .Values.taigaDB.image.tag -}}
{{- if .Values.taigaDB.enable }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "taiga.fullname" . }}-db
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"{{ $fullName }}-db:{{ $isTag }}"},"fieldPath":"spec.template.spec.containers[?(@.name==\"taiga-db\")].image"}]'
  labels:
    {{- include "taiga.labels" . | nindent 4 }}
    app.kubernetes.io/component: taiga-db
spec:
  serviceName: {{ template "taiga.fullname" . }}-db
  replicas: 1
  selector:
    matchLabels:
      {{- include "taiga.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: taiga-db
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "taiga.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: taiga-db
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.taigaDB.podSecurityContext | nindent 8 }}
      containers:
        - name: taiga-db
          securityContext:
            {{- toYaml .Values.taigaDB.securityContext | nindent 12 }}
          {{- if .Values.taigaImageStreams.enable }}
          image: "{{ .Values.taigaImageStreams.registryURL }}/{{ .Release.Namespace }}/{{ include "taiga.fullname" . }}-db:{{ $isTag }}"
          {{- else }}
          image: "{{ .Values.taigaDB.image.repository }}:{{ $isTag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.taigaDB.image.pullPolicy }}
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .Values.env.postgresDB | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.env.postgresPassword | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.env.postgresUser | quote }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: taiga-db-data
          {{- with .Values.taigaDB.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.taigaDB.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.taigaDB.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.taigaDB.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      volumes:
        - name: taiga-db-data
        {{- if .Values.taigaDB.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "taiga.fullname" . }}-db-data
        {{- else }}
          emptyDir: {}
        {{- end }}

{{- end }}
